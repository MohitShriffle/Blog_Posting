c
self.blog_views.where('viewed_at >= ? AND viewed_at <= ?', Time.now - 24.hours, Time.now).count
self
c
params
c
params
c
@current_user
c
@current_user
c
Subscription.find(params[:id])
params[:id]
c
Subscription.find(params[:id])
params[:id]
params
c
params[:id]
parmas[:id]
c
s= Subscription.find_by(params[:id])c
s.user
s= Subscription.find_by(params[:id])
c
s.user
s= Subscription.find_by(params[:id])
s.user
@current_user
c
@current_user
s.user
s=Subscription.find_by(params[:id])
@s=Subscription.find_by(params[:id])
Subscription.find_by(params[:id])
params
parmas
@subscription
c
@current_user.subscription.find_by(params[:id])
c
@current_user.subscription
@current_user.subscription.find(id: params[:id])
params[:id]
@current_user.subscription
@current_user.subscription.
@current_user.subscription.find_by(params[:id])
@current_user.subscription.find(params[:id])
c
subscription.valid?
c
params[:status]
params
subscription.valid?
subscription.valid
c
Plan.find(subscription_params[:plan_id])
c
Plan.find(subscription_params[:id])
Plan.find(subscription_params[:plan_id])
c
@plan
c
@current_user
current_user
c
Plan.find(subscription_params[:plan_id])
c
plan.subscriptions.create!(subscription_params.merge(user_id: @current_user.id))
plan.subscriptions.create!(subscription_params)
plan.subscriptions.create(subscription_params)
plan.subscriptions
plan.subscription
plan.subscriptions
plan = Plan.find(subscription_params[:plan_id])
subscription[:plan_id].to_i
plan = Plan.find(subscription[:plan_id].to_i)
plan = Plan.find(subscription[:plan_id].TO_I)
plan = Plan.find(subscription[:plan_id])
subscription_params[:plan_id]
subscription_params
Plan.find(3)
subscription_params
c
params[:active].to_booleanc
params[:active].to_b
params[:active].to_bool
params[:active].to_boolean
params
c
params
c
params
c
params[:start_date].to_date
params[:start_date].date
params[:start_date]
c
params[:plan_id].to_i
params[:plan_id]
params
c
params[:plan_id].to_i
params[:plan_id]
param[:plan_id]
param[plan_id:]
param[:plan_id]
plan_id
@current_user.build_subscription(subscription_params)
params
parmas
c
params
parmas
@current_user.build_subscription(subscription_params)
c
params
c
params
c
 c
@plan.subscriptions.create(subscription_params,@current_user.id)
@current_user
@plan.subscriptions.create(subscription_params)
@plan.subscriptions.create
c
Plan.find_by(params[:id])
c
Plan.find_by(params[:id])
Plan.find_by(\params[:id])
Plan.find_by(id: params[:id])
c
Plane.find_by(id: params[:id])
params
parmas
@plan
c
          render json: blogs.titlec
        end
          render json: blogs.title
        else
          render json: blogs
        if(i<5)
    blogs.each_with_index do |b,i|
     blogs.each_with_index do |b,i|  end
     blogs.each_with_index do |b,i| 
     blogs.each_with_index do |b,i|
c
@blog
c
@blog.modifications_count
@blog.modification_count
@blog
c
@blog
@blog.update(blog_params)
c
@blog.update(blog_params)
c
@blog.user == @current_user && @blog.update(blog_params)
params
c
@current_user
c
@current_user
c
user
c
@user.otp
c
user.otp
user
c
self.otp =generate_otp
user
c
@user.otp
@user.optp
@user
c
user = User.find_by(email: params[:email])
params[:email]
params
user
c
@user.email
@user
c
self.email
self.otp
self
self.otp = generate_otp
self
c
self.opt 
self.opt = generate_otp
self.opt
generate_otp
c
self
c
params
user_parmas
