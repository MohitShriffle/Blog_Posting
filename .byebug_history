c
JSON.parse(subject.body)
c
C
JSON.parse(subject.body)
c
JSON.parse(subject.body)
c
JSON.parse(subject.body)
c
JSON.parse(subject.body)
c
JSON.parse(subject.body)
c
JSON.parse(subject.body)
c
JSON.parse(subject.body)
c
JSON.parse(subject.body)
c
@current_user.subscription
c
@current_user.subscription
c
JSON.parse(subject.body)
c
JSON.parse(subject.body)
c
plan
n
plan
n
params
c
JSON.parse(subject.body)
c
if @plan
@plan
unless @plan end
unless @plan
c
Plan.find_by(params[:id])
c
Plan.find_by(params[:id])
@plan
@plam
c
JSON.parse(subject.body)
c
JSON.parse(subject.body)
c
JSON.parse(subject.body)
c
JSON.parse(subject.body)
c
params
c
JSON.parse(subject.body)
params
c
JSON.parse(subject.body)
c
JSON.parse(subject.body)
params
c
JSON.parse(subject.body)
c
JSON.parse(subject.body)
c
JSON.parse(subject.body)
c
JSON.parse(subject.body)
params
c
params
c
n
JSON.parse(subject.body)
c
params
JSON.parse(subject.body)
c
JSON.parse(subject.body)
c
JSON.parse(subject.body)
c
JSON.parse(subject.body)
c
params
c
params
c
params
c
JSON.parse(subject.body)
c
Plan.find_by(params[:id])
c
Plan.find_by(params[:id])
c
Plan.find_by(params[:id])
c
Plan.find_by(params[:id])
params[:id]
c
params[:id]
Plan.find_by(params[:id])
c
Plan.find_by(params[:id].to_i)
c
Plan.find_by(params[:id].to_i)c
Plan.find_by(params[:id].to_i)
c
Plan.find_by(params[:id].to_i)
c
@plan
n
c
Plan.find_by(params[:id].to_i)
Plan.find_by(params[:id])
params[:id]
c
params
c
JSON.parse(subject.body)
c
JSON.parse(subject.body)
c
@current_user
c
@current_user
c
@current_user
c
params
paramsd
c
plan.present? && plan.price == params[:price].to_d
n
c
plan.price == params[:price]
params[:price].to_d
params[:price]
plan.price
plan.pricew
plan.present?
plan
n
plan
n
Plan.find_by(params[:plan_id].to_s)
c
plan
plan.present?
plan.present? && plan.price == params[:price]
n
Plan.find_by(params[:plan_id].to_s)
c
Plan.find_by(params[:plan_id].to_s)
Plan.find_by(params[:plan_id].to_i)
c
params[:plan_id]c
Plan.find_by(6)
params[:plan_id]
Plan.find_by(params[:plan_id])
c
plan
n
plan
n
c
params[:plan].blank?
c
plan
n
params[:plan_id]
params
c
user
n
c
User.find_by(params[:otp])
params[:otp]
params
c
self
@self.otp_sent_at
@self..otp_sent_at
self
@current_user
@current_user.otp_sent_at
otp_sent_at
c
Plan.find_by(params[:id])
c
C
c
params
c
params
plan.id
c
plan.id
plan
c
response
response.body
n
response.body
response
response\
JSON.parse(subject.body)
c
JSON.parse(subject.body)
c
bearer_token
c
response.body
JSON.parse(subject.body)
c
JSON.parse(subject.body)
c
request.headers[:token]
params
c
request.headers[:token]=bearer_token
c
request.headers[:token]=bearer_token
c
request.headers[:token]=bearer_token
c
request.headers[:token]=bearer_token
bearer_token
request.headers[:token]
c
n
bearer_token
c
JSON.parse(subject.body)
n
JSON.parse(subject.body)
user
c
JSON.parse(subject.body)
plan.valid?
plan.valid
plan.vaild
plan
c
cc
c
@current_user
n
decoded
n
decoded
